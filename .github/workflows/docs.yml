name: Build & Deploy Docs (Pages)

on:
  push:
    branches: [ master ]   # cambia a main si corresponde
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'requirements.txt'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Print versions (debug)
        run: |
          python --version
          mkdocs --version
          pip show mkdocs-static-i18n mkdocs-material mkdocs

      # üîé DEBUG: inspeccionar exactamente qu√© lleg√≥ al runner
      - name: Debug tree & expected files
        run: |
          echo "=== docs (nivel 1) ==="
          ls -lah docs || true
          echo
          echo "=== docs (recursivo, m√°x 2 niveles) ==="
          find docs -maxdepth 2 -type f -printf "%P\n" | sort || true
          echo
          echo "=== Verificaci√≥n de archivos ES esperados por nav ==="
          required_files=(
            "index.es.md"
            "producto.es.md"
            "guia.es.md"
            "premium.es.md"
            "seguridad.es.md"
            "contacto.es.md"
            "legal/privacidad.es.md"
            "legal/terminos.es.md"
          )
          for f in "${required_files[@]}"; do
            if [ -f "docs/$f" ]; then
              echo "OK     $f"
            else
              echo "FALTAN $f"
            fi
          done
          echo
          echo "=== mkdocs.yml (primeras 240 l√≠neas) ==="
          sed -n '1,240p' mkdocs.yml || true

      - name: Build (strict)
        run: mkdocs build --strict

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
